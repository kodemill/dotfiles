function da() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}
# Select a running docker container to stop
function ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}
# Select a docker container to remove
function drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}

# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# Modified version where you can press
#   - CTRL-O to open with `open` command,
#   - CTRL-E or Enter key to open with the $EDITOR
fo() {
  local out file key
  IFS=$'\n' out=("$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-vim} "$file"
  fi
}

# fkill - kill process
fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}

# fshow - git commit browser
fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

aws_mfa() {
  echo '=== AWS MFA authenticator ==='
  [[ -z "$AWS_PROFILE" ]] && echo '$AWS_PROFILE is not set!' && return
  local user_arn=$(aws sts get-caller-identity | jq --raw-output '.Arn')
  local username=$(echo $user_arn | sed 's!arn:aws:iam::.*:user/!!')
  local mfa_device_arn=$(aws iam list-mfa-devices --user-name "$username" | jq --raw-output '.MFADevices[0].SerialNumber')
  local token
  echo "Hi $username! Pls gib mfa token from device \"$mfa_device_arn\", o-ke?"
  read token
  local session_token=$(aws sts get-session-token --serial-number "$mfa_device_arn" --token-code "$token")
  export AWS_SESSION_TOKEN=$(echo "$session_token" | jq --raw-output '.Credentials.SessionToken')
  export AWS_SECRET_ACCESS_KEY=$(echo "$session_token" | jq --raw-output '.Credentials.SecretAccessKey')
  export AWS_ACCESS_KEY_ID=$(echo "$session_token" | jq --raw-output '.Credentials.AccessKeyId')
  local expiration=$(echo "$session_token" | jq --raw-output '.Credentials.Expiration')
  echo "Set expiration token! It's valid until $expiration"
  echo '=== Bye! ==='
}

aws_mfa_unset() {
  unset AWS_ACCESS_KEY_ID
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_SESSION_TOKEN
}
